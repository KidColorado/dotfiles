#!/bin/sh

# Welcome to Kit's install script!
# Files located one level deep relative to this file will be linked to the
# user root directory.
# Call this script form directory this file resides in. `sh install`

DOTFILES_NAME=".dotfiles"
DOTFILES="$HOME"/"$DOTFILES_NAME"
MACOS_CONFIG=$1

file_exsists() {
  ls -al "$HOME" | grep "$1$" >/dev/null
}

link_exsists() {
  ls -al "$HOME" | grep -F "$1 ->" >/dev/null
}

create_them_symlinks() {
  rcfile=${1##*/}
  if file_exsists "$rcfile"; then
    if link_exsists "$rcfile"; then
      fancy_echo "\e[1;31mSkipping...\e[0m A Link named \e[1;37m$HOME/.$rcfile\e[0m already exists." "$1"
    else
      fancy_echo "\e[1;31mSkipping...\e[0m File or Dir. named \e[1;37m$HOME/.$rcfile\e[0m already exists." "$1"
    fi
  else
    fancy_echo "\e[1;32mSym-link created!\e[0m   \e[1;37m$1\e[0m is linked to \e[1;37m$HOME/.$rcfile\e[0m" "$1"
    ln -s "$1" "$HOME"/."$rcfile"
  fi
}

fancy_echo "\e[1;37mDownloading Dotfiles\e[0m"
test -e "$DOTFILES" || git clone --recursive \
  https://github.com/kpearson/dotfiles.git "$DOTFILES"

# Brew install apps not in the Thoughtbot laptop script
fancy_echo "\e[1;37mInstalling other apps\e[0m"
set +e
brew analytics off
brew bundle install --file="$DOTFILES"/Brewfile
set -e

# ===== Symlink all files ending with "rc" in this repo
fancy_echo "\e[1;37mSymlinking rc files\e[0m"
test -e "$HOME/.zshrc" && mv "$HOME/.zshrc" "$HOME/.zshrc-back"
find "$DOTFILES" -maxdepth 2 -name "*rc" | while read line; do
  create_them_symlinks "$line"
done

fancy_echo "\e[1;37mSymlinking non-rc files\e[0m"
create_them_symlinks "$DOTFILES"/tmux/tmux.conf
create_them_symlinks "$DOTFILES"/gitconfig
create_them_symlinks "$DOTFILES"/shell/xterm-256color-italic.ti

fancy_echo "\e[1;37mRemoving link to git completions in lue of git-aliases\e[0m"
_GIT_PATH=$(whence -v _git | cut -d" " -f7)
test -e "$_GIT_PATH" && rm "$_GIT_PATH"

# Link Visual Studio Code config
# fancy_echo "Setting up VS-Code"
# mkdir -p "$HOME"/Library/Application\ Support/Code/User/
# ln -s "$DOTFILES"/vs-code/* "$HOME"/Library/Application\ Support/Code/User/

if [[ -z "${MACOS_CONFIG}" ]]; then
  fancy_echo "\e[1;37mUpdating Mac settings\e[0m"
  sh "$DOTFILES"/macos
fi

fancy_echo "\e[1;37miTerm2 shell integration. .zshrc executes this on logging if present\e[0m"
curl --silent -L https://iterm2.com/misc/install_shell_integration.sh | bash

fancy_echo "\e[1;37mCleaning up old Homebrew formulae ...\e[0m"
brew cleanup
brew bundle cleanup --file="$DOTFILES"/Brewfile

fancy_echo "\e[1;37mSetup complete!\e[0m\nRestart for settings to take effect.\n"

